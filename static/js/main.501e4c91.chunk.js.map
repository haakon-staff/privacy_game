{"version":3,"sources":["Components/Popup/Popup.jsx","Components/Tos.js","Components/ManageTos.js","Features/Quiz/useTimer.jsx","Features/Quiz/QuizFrame.jsx","Features/Frontpage.js","Features/Quiz/Hints.jsx","Features/Quiz/ClueFrame.jsx","Features/Quiz/Clue.jsx","Features/Quiz/Countdown.jsx","Features/Quiz/Quiz.jsx","Features/Outdex/utils.js","Features/Outdex/Outdex.jsx","Features/Quiz/Hint.jsx","App.js","reportWebVitals.js","index.js"],"names":["Popup","content","optButtonText","mainButtonText","funcButtonOpt","funcButtonMain","className","onClick","Tos","ManageTos","formProps","name","type","checked","values","onChange","setFieldValue","style","gps","browserH","searchH","political","preference","useTimer","params","autoStart","getCurrentTime","Date","getTime","ref","useRef","startTime","undefined","current","startTimer","getElapsedTime","QuizContext","React","createContext","QuizFrame","children","useState","currentQuestionIndex","setCurrentQuestionIndex","currentInputValue","setCurrentInputValue","answers","setAnswers","navigate","useNavigate","contextData","questions","questionWasAnswered","questionAnswersParamaters","answer","elapsedTime","length","Provider","value","Stage","main","Symbol","popup","manage","Frontpage","props","stage","setStage","timeTakenToAnwserTos","setTimeTakenToAnwserTos","tosTimer","quizContext","useContext","closePopup","initialValues","enableReinitialize","onSubmit","tosData","sendTos","startQuiz","Hints","hints","map","hint","ix","href","linkname","target","ClueContext","ClueFrame","clueNumber","setClueNumber","isUsed","setIsUsed","isAccepted","setIsAccepted","clueAnswers","setClueAnswers","currentClueInputValue","setCurrentClueInputValue","clueWasUsed","isText","clueAnswersParamters","sensitiveQuestion","sensitiveQuestions","question","sensitiveAnswer","clueWasAccepted","incrementIfUsed","Clue","isOpen","setIsOpen","closeFn","clueContext","clue","inputType","e","compromisedAnswer","nonCompromisedAnswer","Countdown","secondsToCountdown","secondsLeft","setSecondsLeft","useEffect","timerId","setInterval","clearInterval","zeroPadding","Math","floor","number","slice","Quiz","event","writeToFile","tos","clueanswers","data","JSON","stringify","console","log","strData","strMimeType","D","document","A","arguments","a","createElement","n","escape","setAttribute","innerHTML","body","appendChild","setTimeout","createEvent","initMouseEvent","window","dispatchEvent","removeChild","f","src","btoa","download","Outdex","Hint","useParams","find","App","setTos","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.501e4c91.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Popup = ({ content, optButtonText, mainButtonText, funcButtonOpt, funcButtonMain }) => {\r\n    return (\r\n        <div className=\"popup-background\">\r\n            <div className=\"popup-box\">\r\n                <h2>Cookie settings</h2>\r\n                <p>{content}</p>\r\n                <div className=\"button-container\">\r\n                    {optButtonText && (\r\n                        <button className=\"secondary-button\" onClick={funcButtonOpt}>\r\n                            {optButtonText}\r\n                        </button>\r\n                    )}\r\n                    <button className=\"primary-button\" onClick={funcButtonMain}>\r\n                        {mainButtonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popup;","import React from 'react'\r\n\r\nconst Tos = () => {\r\n    return (\r\n        <div>\r\n            <p>\r\n            When you visit any website, it may store or retrieve information on your browser, mostly in the form of cookies. This information might be about you, your preferences or your device and is mostly used to make the site work as you expect it to. The information does not usually directly identify you, but it can give you a more personalized web experience. Because we respect your right to privacy, you can choose not to allow some types of cookies. Click on the different category headings to find out more and change our default settings. However, blocking some types of cookies may impact your experience of the site and the services we are able to offer.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tos\r\n","import React from 'react'\r\n\r\nconst ManageTos = ({ formProps }) => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                Manage TOS\r\n            </p>\r\n            <div >\r\n                <label>\r\n                    <input name=\"name\" type=\"checkbox\" checked={formProps.values.name} onChange={() => formProps.setFieldValue(\"name\", !formProps.values.name)} />\r\n                    <b>Name</b>\r\n                    <p style={{ \"margin-left\": \"1.3em\", \"margin-top\":\"0\"}}>\r\n                        By accepting this cateogry, you agree that the application can store your name untill the research project is completed, which will be june 2022.\r\n                    </p>\r\n                </label>\r\n            </div>\r\n            <div >\r\n                <label>\r\n                    <input name=\"gps\" type=\"checkbox\" checked={formProps.values.gps} onChange={() => formProps.setFieldValue(\"gps\", !formProps.values.gps)} />\r\n                    <b>GPS</b>\r\n                    <p style={{ \"margin-left\": \"1.3em\", \"margin-top\":\"0\"}}>\r\n                        By accepting this category, you allow the application to turn on the GPS and collect the GPS data while you use this site. The data will be stored until june 2022.\r\n                    </p>\r\n                </label>\r\n            </div>\r\n            <div >\r\n                <label>\r\n                    <input name=\"browserH\" type=\"checkbox\" checked={formProps.values.browserH} onChange={() => formProps.setFieldValue(\"browserH\", !formProps.values.browserH)} />\r\n                    <b>Browser history</b>\r\n                    <p style={{ \"margin-left\": \"1.3em\", \"margin-top\":\"0\"}}>\r\n                        By accepting this category, you allow the application to look at and fetch your broswer history. Meaning any logs or data than be linked to what activity you perform when surfing the internet.\r\n                    </p>\r\n                </label>\r\n            </div>\r\n            <div >\r\n                <label>\r\n                    <input name=\"searchH\" type=\"checkbox\" checked={formProps.values.searchH} onChange={() => formProps.setFieldValue(\"searchH\", !formProps.values.searchH)} />\r\n                    <b>Search history</b>\r\n                    <p style={{ \"margin-left\": \"1.3em\", \"margin-top\":\"0\"}}>\r\n                        By accepting this category, you allow the application to fetch and analyze your search history. Meaning any data than be related to what kind of searches you perfom when surfing the internet.\r\n                    </p>\r\n                </label>\r\n            </div>\r\n            <div >\r\n                <label>\r\n                    <input name=\"political\" type=\"checkbox\" checked={formProps.values.political} onChange={() => formProps.setFieldValue(\"political\", !formProps.values.political)} />\r\n                    <b>Political data</b>\r\n                    <p style={{ \"margin-left\": \"1.3em\", \"margin-top\":\"0\"}}>\r\n                        By accepting this category, you allow the application to analyze and collect any data that is related to your political preference. For instance, any data than can be related to what you voted in the last election, or what you will vote the next election.\r\n                    </p>\r\n                </label>\r\n            </div>\r\n            <div >\r\n                <label>\r\n                    <input name=\"preference\" type=\"checkbox\" checked={formProps.values.preference} onChange={() => formProps.setFieldValue(\"preference\", !formProps.values.preference)} />\r\n                    <b>Sexual preference</b>\r\n                    <p style={{ \"margin-left\": \"1.3em\", \"margin-top\":\"0\"}}>\r\n                        By accepting this category, you allow the application to fetch and analyze any data than can be linked or related to your sexual preference. \r\n                    </p>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageTos\r\n","import { useRef } from 'react'\r\n\r\nconst useTimer = (params = {}) => {\r\n    const autoStart = params.autoStart ?? false\r\n    const getCurrentTime = () => new Date().getTime() / 1000\r\n\r\n\r\n    const ref = useRef({ startTime: undefined })\r\n    if (autoStart && ref.current.startTime === undefined) {\r\n        ref.current.startTime = getCurrentTime()\r\n    }\r\n\r\n    const startTimer = () => {\r\n        ref.current.startTime = getCurrentTime()\r\n    }\r\n\r\n    const getElapsedTime = () => {\r\n        const currentTime = getCurrentTime()\r\n        return currentTime - ref.current.startTime\r\n    }\r\n\r\n    return {\r\n        startTimer,\r\n        getElapsedTime\r\n    }\r\n}\r\n\r\nexport default useTimer\r\n","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport questions from \"../../Data/quizQuestions.json\";\r\nimport useTimer from './useTimer';\r\n\r\nexport const QuizContext = React.createContext()\r\n\r\n\r\nconst QuizFrame = ({ children }) => {\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [currentInputValue, setCurrentInputValue] = useState(\"\");\r\n    const [answers, setAnswers] = useState([]);\r\n    \r\n    const { startTimer, getElapsedTime } = useTimer()\r\n    const navigate = useNavigate();\r\n\r\n    const questionWasAnswered = () => {\r\n        const questionAnswersParamaters = {\r\n            questions: questions[currentQuestionIndex],\r\n            answer: currentInputValue,\r\n            elapsedTime: getElapsedTime()\r\n        }\r\n        setAnswers([...answers, questionAnswersParamaters])\r\n        setCurrentInputValue(\"\")\r\n\r\n        if (questions.length - 1 === currentQuestionIndex) {\r\n            navigate('/final');\r\n        }\r\n        else {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1)\r\n            //nullstill timer for hvert spm\r\n            startTimer()\r\n        }\r\n    }\r\n\r\n    const contextData = {\r\n        current: questions[currentQuestionIndex],\r\n        questionWasAnswered,\r\n        startTimer,\r\n        currentInputValue,\r\n        setCurrentInputValue,\r\n        answers,\r\n        setAnswers,\r\n    }\r\n\r\n    return (\r\n        <QuizContext.Provider value={contextData}>\r\n            {children}\r\n        </QuizContext.Provider>\r\n    )\r\n}\r\n\r\nexport default QuizFrame\r\n","import Popup from '../Components/Popup/Popup';\r\nimport React, { useState, useContext } from \"react\";\r\nimport Tos from '../Components/Tos';\r\nimport ManageTos from '../Components/ManageTos';\r\nimport { Formik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { QuizContext } from './Quiz/QuizFrame';\r\nimport useTimer from './Quiz/useTimer';\r\n\r\n\r\nconst Stage = {\r\n    main: Symbol(),\r\n    popup: Symbol(),\r\n    manage: Symbol(),\r\n}\r\n\r\n\r\nconst Frontpage = (props) => {\r\n    const [stage, setStage] = useState(Stage.popup);\r\n    const [timeTakenToAnwserTos, setTimeTakenToAnwserTos] = useState(undefined);\r\n    const tosTimer = useTimer({ autoStart: true });\r\n    const navigate = useNavigate();\r\n\r\n    const quizContext = useContext(QuizContext)\r\n\r\n\r\n    const closePopup = () => {\r\n        setTimeTakenToAnwserTos(tosTimer.getElapsedTime())\r\n        setStage(Stage.main)\r\n    }\r\n\r\n    const startQuiz = (formProps) => {\r\n        const tosData = {\r\n            ...formProps.values,\r\n            timeTakenToAnwserTos\r\n        }\r\n\r\n        props.sendTos(tosData)\r\n        quizContext.startTimer()\r\n        navigate('/quiz');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{ name: true, gps: true, browserH: true, searchH: true, political: true, preference: true }}\r\n                enableReinitialize\r\n                onSubmit={() => { }}\r\n            >\r\n                {(formProps) => {\r\n                    return (\r\n                        <>\r\n                            <h1>Information seeker</h1>\r\n                            <p className=\"Sidemargin\"> <b>Your objetive: </b> Answer all the questions before you run out of time <br /><br />\r\n\r\n                                This is a test to measure how good you are at finding key information within a short time period. On the next page you will see the following:\r\n                                <br/>\r\n                                <b>An input field:</b> Here you can insert your answer to the question, by clicking \"next\" your answer is locked, you can <b>not</b> go back once you have clicked \"next\", so be confident in your answer!\r\n                                <br/>\r\n                                <b>Company information:</b> Here there are 4 links, with information that contain the answers to the questions. However the links also contain alot of information that is not relevant to the answer. This is the tricky part!\r\n                                <br/>\r\n                                <b>Clue!</b> Are you stuck? Or do you wish to find the answer quick? Use the clue button to get help. You can only use it once on each question, but you can use it on all questions. Some terms may apply when using \"Clue!\", but there are no punishments.\r\n\r\n                            </p>\r\n                            <b className=\"Sidemargin\"> A reward will be given to the participant with the most correct answer within the shortest time! Be quick and precise. </b>\r\n                            <br />\r\n                            <br />\r\n                            <div className=\"button-container\">\r\n                                <button className=\"primary-button\" onClick={() => startQuiz(formProps)}>\r\n                                    Start\r\n                                </button>\r\n                            </div>\r\n                            {stage === Stage.popup && (\r\n                                <Popup content={(<Tos />)} optButtonText=\"manage\" funcButtonOpt={() => setStage(Stage.manage)} mainButtonText=\"accept\" funcButtonMain={() => closePopup()} />\r\n                            )}\r\n                            {stage === Stage.manage && (\r\n                                <Popup content={(<ManageTos formProps={formProps} />)} mainButtonText=\"Save\" funcButtonMain={() => closePopup()} />\r\n                            )}\r\n                        </>\r\n                    )\r\n                }}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Frontpage\r\n","import React from 'react'\r\nimport hints from \"../../Data/hints.json\";\r\n\r\nconst Hints = () => {\r\n    return (\r\n        <div className=\"hints\">\r\n            <h2>Company information</h2>\r\n            {\r\n                hints.map((hint, ix)=> <a key={ix} href={\"#/hint/\" + hint.linkname} target=\"hint\">{hint.linkname}</a>) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hints\r\n","import React, { useState } from 'react'\r\nimport sensitiveQuestions from \"../../Data/sensitiveQuestions.json\";\r\n\r\nexport const ClueContext = React.createContext()\r\n\r\n\r\nconst ClueFrame = ({ children }) => {\r\n    const [clueNumber, setClueNumber] = useState(0)\r\n    const [isUsed, setIsUsed] = useState(false)\r\n    const [isAccepted, setIsAccepted] = useState(false)\r\n    const [clueAnswers, setClueAnswers] = useState([]);\r\n    const [currentClueInputValue, setCurrentClueInputValue] = useState(\"\");\r\n\r\n    const clueWasUsed = (isText) => {\r\n        const clueAnswersParamters = {\r\n            sensitiveQuestion: sensitiveQuestions[clueNumber].question,\r\n            sensitiveAnswer: currentClueInputValue\r\n        }\r\n\r\n        setClueAnswers([\r\n            ...clueAnswers,\r\n            clueAnswersParamters\r\n        ])\r\n        setIsUsed(true)\r\n    }\r\n\r\n    const clueWasAccepted = () => {\r\n        setIsAccepted(true)\r\n    }\r\n\r\n    const incrementIfUsed = () => {\r\n        if (isUsed) {\r\n            setClueNumber(clueNumber + 1)\r\n        }\r\n        setIsUsed(false)\r\n    }\r\n\r\n    const contextData = {\r\n        clueNumber,\r\n        clueWasUsed,\r\n        clueWasAccepted,\r\n        incrementIfUsed,\r\n        sensitiveQuestion: sensitiveQuestions[clueNumber],\r\n        isUsed,\r\n        isAccepted,\r\n        clueAnswers,\r\n        setClueAnswers,\r\n        currentClueInputValue,\r\n        setCurrentClueInputValue,\r\n    }\r\n    return (\r\n        <ClueContext.Provider value={contextData}>\r\n            {children}\r\n        </ClueContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ClueFrame\r\n","import React, { useState, useContext } from 'react'\r\nimport { ClueContext } from './ClueFrame';\r\nimport { QuizContext } from './QuizFrame';\r\n\r\nconst Clue = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const click = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"clue\">\r\n            <button className=\"bait-button\" onClick={() => click()} >Clue!</button>\r\n            {isOpen && <Popup closeFn={() => setIsOpen(false)} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clue\r\n\r\n\r\n\r\nconst Popup = ({ closeFn }) => {\r\n    const clueContext = useContext(ClueContext)\r\n    const quizContext = useContext(QuizContext)\r\n\r\n    const accept = () => {\r\n        if (clueContext.sensitiveQuestion.inputType === \"text\" && clueContext.currentClueInputValue === \"\") {\r\n            return;\r\n        }\r\n        \r\n        clueContext.clueWasUsed(clueContext.sensitiveQuestion.inputType === \"text\")\r\n        clueContext.clueWasAccepted()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup-box\">\r\n            <div className=\"box\">\r\n                {\r\n                    !clueContext.isUsed\r\n                        ? <>\r\n                            {clueContext.sensitiveQuestion.question}\r\n                            <br />\r\n                            {\r\n                                clueContext.sensitiveQuestion.inputType === \"text\"\r\n                                && <>\r\n                                    <input type=\"text\" value={clueContext.currentClueInputValue} onChange={e => clueContext.setCurrentClueInputValue(e.target.value)} />\r\n                                </>\r\n                            }\r\n                            <br />\r\n                            <button onClick={() => accept()}>\r\n                                {clueContext.sensitiveQuestion.compromisedAnswer}\r\n                            </button>\r\n                            <button onClick={() => closeFn()}>\r\n                                {clueContext.sensitiveQuestion.nonCompromisedAnswer}\r\n                            </button>\r\n                        </>\r\n                        : <>\r\n                            Here is your clue!\r\n                            <br />\r\n                            {quizContext.current.clue}\r\n                            <br />\r\n                            <button className=\"primary-button\" onClick={() => closeFn()}>\r\n                                Close\r\n                            </button>\r\n                        </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Countdown = ({ secondsToCountdown }) => {\r\n    const [secondsLeft, setSecondsLeft] = useState(secondsToCountdown) //6 minites default 360\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const timerId = setInterval(() => {\r\n            if (secondsLeft === 0) {\r\n                navigate('/final');\r\n                return;\r\n            }\r\n            setSecondsLeft(secondsLeft - 1);\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n    }, [secondsLeft, navigate])\r\n\r\n\r\n    return (\r\n        <div className=\"countdown\">\r\n            <span>\r\n                {zeroPadding(Math.floor(secondsLeft / 60))}\r\n                :\r\n                {zeroPadding(secondsLeft % 60)}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countdown\r\n\r\n\r\nconst zeroPadding = (number) => {\r\n    return (\"0\" + number).slice(-2)\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport Hints from \"./Hints\";\r\nimport Clue from \"./Clue\"\r\nimport { ClueContext } from \"./ClueFrame\";\r\nimport { QuizContext } from \"./QuizFrame\";\r\nimport Countdown from \"./Countdown\";\r\n\r\n\r\nconst Quiz = (props) => {\r\n\r\n    const quizContext = useContext(QuizContext)\r\n    const clueContext = useContext(ClueContext)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"quiz-page\">\r\n                <h1>Information seeker</h1>\r\n                <Hints />\r\n                <p className=\"question-text\">{quizContext.current.question}</p>\r\n                <div>\r\n                    <input type=\"text\" onChange={(event) => quizContext.setCurrentInputValue(event.target.value)} value={quizContext.currentInputValue} />\r\n\r\n                    <button className=\"secondary-button\" onClick={() => { quizContext.questionWasAnswered(); clueContext.incrementIfUsed() }}>\r\n                        Next question!\r\n                    </button>\r\n                </div>\r\n                <br />\r\n                <Clue />\r\n                <br />\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <Countdown secondsToCountdown={600} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quiz;\r\n","function download(strData, strMimeType) {\r\n    console.log(\"run download\")\r\n    var D = document,\r\n        A = arguments,\r\n        a = D.createElement(\"a\"),\r\n        d = A[0],\r\n        n = A[1],\r\n        t = A[2] || \"text/plain\";\r\n\r\n    //build download link:\r\n    a.href = \"data:\" + strMimeType + \"charset=utf-8,\" + escape(strData);\r\n\r\n\r\n    // if (window.MSBlobBuilder) { // IE10\r\n    //     var bb = new MSBlobBuilder();\r\n    //     bb.append(strData);\r\n    //     return navigator.msSaveBlob(bb, strFileName);\r\n    // } /* end if(window.MSBlobBuilder) */\r\n\r\n\r\n\r\n    if ('download' in a) { //FF20, CH19\r\n        a.setAttribute(\"download\", n);\r\n        a.innerHTML = \"downloading...\";\r\n        D.body.appendChild(a);\r\n        setTimeout(function () {\r\n            var e = D.createEvent(\"MouseEvents\");\r\n            e.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n            a.dispatchEvent(e);\r\n            D.body.removeChild(a);\r\n        }, 66);\r\n        return true;\r\n    }; /* end if('download' in a) */\r\n\r\n\r\n\r\n    //do iframe dataURL download: (older W3)\r\n    var f = D.createElement(\"iframe\");\r\n    D.body.appendChild(f);\r\n    f.src = \"data:\" + (A[2] ? A[2] : \"application/octet-stream\") + (window.btoa ? \";base64\" : \"\") + \",\" + (window.btoa ? window.btoa : escape)(strData);\r\n    setTimeout(function () {\r\n        D.body.removeChild(f);\r\n    }, 333);\r\n    return true;\r\n}\r\n\r\n\r\n\r\nconst writeToFile = (tos,answers,clueanswers) => {\r\n    const data = JSON.stringify({tos,answers,clueanswers},null,4)\r\n\r\n    console.log(data)\r\n    download(data, 'report.txt', 'text/plain');\r\n}\r\n\r\n\r\nexport default writeToFile;","import React, { useContext } from 'react';\r\nimport { QuizContext } from '../Quiz/QuizFrame';\r\nimport { ClueContext } from '../Quiz/ClueFrame';\r\nimport writeToFile from './utils';\r\n\r\n\r\nconst Outdex = (props) => {\r\n    const quizContext = useContext(QuizContext)\r\n    const clueContext = useContext(ClueContext)\r\n\r\n    return (\r\n        <div>\r\n            <h1>FINAL PAGE</h1>\r\n            <button onClick={() => writeToFile(props.tos, quizContext.answers, clueContext.clueAnswers)}>\r\n                Download report\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Outdex\r\n","import React from 'react'\r\nimport hints from \"../../Data/hints.json\"\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst Hint = () => {\r\n\r\n    const { linkname } = useParams();\r\n    const { content } = hints.find(hint => hint.linkname === linkname);\r\n\r\n    return (\r\n        <>\r\n            <h2>{linkname}</h2>\r\n            <div className=\"Hint-Text\">\r\n\r\n                <br />\r\n                {content.map((e) => <p>{e}<br /></p>)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Hint","import Frontpage from './Features/Frontpage';\nimport Quiz from \"./Features/Quiz/Quiz\"\nimport React, { useState } from \"react\";\nimport Outdex from './Features/Outdex/Outdex';\nimport Hint from './Features/Quiz/Hint';\n\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport ClueFrame from './Features/Quiz/ClueFrame';\nimport QuizFrame from './Features/Quiz/QuizFrame';\n\nfunction App() {\n\n  const [tos, setTos] = useState({});\n\n  return (\n    <div className=\"main-content\">\n      <Router>\n        <QuizFrame>\n          <ClueFrame>\n            <div className=\"App\">\n              <Routes>\n                <Route path=\"/\" element={<Frontpage sendTos={setTos} />} />\n                <Route path=\"/quiz\" element={<Quiz />} />\n                <Route path=\"/final\" element={<Outdex tos={tos} />} />\n                <Route path=\"/hint/:linkname\" element={<Hint />} />\n              </Routes>\n            </div>\n          </ClueFrame>\n        </QuizFrame>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './layout.css';\nimport './style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}